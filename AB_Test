# -*- coding: utf-8 -*-
"""
Created on Tue Jan 18 20:41:19 2022

@author: ksoo
"""

def get_balance(ticker):
    balances = upbit.get_balances()
    for b in balances:
        if b['currency'] == ticker:
            if b['balance'] is not None:    
                return float(b['balance'])
            else:
                return 0
import numpy as np
import pandas as pd
import pyupbit
import datetime
import time
import key

#detect_term = {1,2,3,4,5,6,7,8,9,10,15,30,60,120,240}
#weight = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}


money = 100000

while True:
    try:
        now = datetime.datetime.now()
        orderbook = pyupbit.get_orderbook("KRW-BTC", limit_info =True)
        #df = pyupbit.get_ohlcv("KRW-BTC", count=1, interval = "minute1")
        price = pyupbit.get_current_price("KRW-BTC")
        total_ask = orderbook[0]['total_ask_size']
        total_biz = orderbook[0]['total_bid_size']
        print(now)
        print(price)
        print(total_ask)
        print(total_biz)
        time.sleep(1)
    except Exception as e:
        print(e)
        time.sleep(1)

#access = key.access_key
#secret = key.secret_key
#cnt=0



"""
print(ksoo)
for j in weight:
    cnt = cnt+1
    for i in weight:
        if(cnt%i == 0):
            for k in detect_term:
                cnt=0
            
        #print(type(i))
"""  
"""
while True:
    try:
        cnt = cnt +1
        
        if(cnt == 240):
            cnt = 0
        sleep(1)
if(total_ask > total_biz*weight):
    #upbit.sell_market_order(ticker,krw*0.9)

if(total_biz > total_ask*weight):
    #upbit.buy_market_order(ticker,BTC*0.9)
"""


#df = pyupbit.get_ohlcv("KRW-BTC", count=1, interval = "minute1")






